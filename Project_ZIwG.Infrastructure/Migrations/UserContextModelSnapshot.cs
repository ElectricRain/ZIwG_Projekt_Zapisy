// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_ZIwG.Infrastructure.Repositories.EFRepository.Context;

namespace Project_ZIwG.Infrastructure.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CourseEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            CourseCode = "TEST1",
                            CourseName = "Zastosowanie Informatyki w Gospodarce",
                            Description = "Zastosowanie"
                        },
                        new
                        {
                            Id = new Guid("93f79744-3c01-46cd-8a0a-033db5f264e7"),
                            CourseCode = "TEST2",
                            CourseName = "Zastosowanie Informatyki w Medycynie",
                            Description = "Zastosowanie"
                        },
                        new
                        {
                            Id = new Guid("cee182bb-82d1-44ed-ba66-8ae89c15fd7d"),
                            CourseCode = "TEST3",
                            CourseName = "Modelowanie i Analiza Systemow Informatycznych",
                            Description = "Modelowanie"
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.RolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RolesEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdf5aa4b-8b2f-4a45-a63d-a24464d728ad"),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            RoleName = "Lecturer"
                        },
                        new
                        {
                            Id = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            RoleName = "Creator"
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("EndHour")
                        .HasColumnType("TEXT");

                    b.Property<int>("Parity")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("StartHour")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TypeId");

                    b.ToTable("SubjectEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bd509d3-62e8-460f-a767-bb9cce9bdcc7"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            Day = 1,
                            EndHour = new TimeSpan(0, 9, 0, 0, 0),
                            Parity = 0,
                            StartHour = new TimeSpan(0, 7, 30, 0, 0),
                            TypeId = new Guid("3ad58457-3b04-409a-a1b4-efb8d5438625")
                        },
                        new
                        {
                            Id = new Guid("00dbb422-a300-4bba-b638-449911881cb8"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            Day = 1,
                            EndHour = new TimeSpan(0, 10, 45, 0, 0),
                            Parity = 2,
                            StartHour = new TimeSpan(0, 9, 15, 0, 0),
                            TypeId = new Guid("c230c06e-acfa-467e-8572-66d6fd7244c8")
                        },
                        new
                        {
                            Id = new Guid("4a28f2c0-b1f5-458b-9b0b-c9a953e67e4d"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            Day = 1,
                            EndHour = new TimeSpan(0, 10, 45, 0, 0),
                            Parity = 1,
                            StartHour = new TimeSpan(0, 9, 15, 0, 0),
                            TypeId = new Guid("c230c06e-acfa-467e-8572-66d6fd7244c8")
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.TypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TypeEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ad58457-3b04-409a-a1b4-efb8d5438625"),
                            FullName = "Wyklad",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c230c06e-acfa-467e-8572-66d6fd7244c8"),
                            FullName = "Laboratorium",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("3b67b49b-7666-4add-a39e-9eedcf30de45"),
                            FullName = "Cwiczenia",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("fb43b254-491c-4d5a-93fe-ec12cb14eb68"),
                            FullName = "Seminarium",
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("477fd19e-89f5-4578-81ec-58971743963f"),
                            FullName = "Projekt",
                            Type = 4
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e"),
                            EmailAddress = "Admin@pwr.edu.pl",
                            Name = "admin",
                            Password = "admin",
                            Surname = "admin"
                        },
                        new
                        {
                            Id = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9"),
                            EmailAddress = "user@pwr.edu.pl",
                            Name = "user",
                            Password = "user",
                            Surname = "user"
                        },
                        new
                        {
                            Id = new Guid("ee4295be-fe35-4626-8f30-ae2f1ddb6c9d"),
                            EmailAddress = "user2@pwr.edu.pl",
                            Name = "user2",
                            Password = "user2",
                            Surname = "user2"
                        },
                        new
                        {
                            Id = new Guid("d0b164f9-7319-4434-ba68-b7d21e83b9af"),
                            EmailAddress = "creator@pwr.edu.pl",
                            Name = "creator",
                            Password = "creator",
                            Surname = "creator"
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserPermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissionEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b2bd2ab-943a-4f86-8953-640738f92e4e"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            TypeId = new Guid("3ad58457-3b04-409a-a1b4-efb8d5438625"),
                            UserId = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9")
                        },
                        new
                        {
                            Id = new Guid("91d55eb4-4a9d-4dff-a807-8b498ee75283"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            TypeId = new Guid("c230c06e-acfa-467e-8572-66d6fd7244c8"),
                            UserId = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9")
                        },
                        new
                        {
                            Id = new Guid("7611508a-470d-429e-a411-d8d2eba9f681"),
                            CourseId = new Guid("9f5dad33-d44c-4806-b224-c05c8988d9cd"),
                            TypeId = new Guid("c230c06e-acfa-467e-8572-66d6fd7244c8"),
                            UserId = new Guid("ee4295be-fe35-4626-8f30-ae2f1ddb6c9d")
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserRolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRolesEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb22fbd3-8ad8-4d9f-8b22-bb8ff3ca5c0e"),
                            RoleId = new Guid("bdf5aa4b-8b2f-4a45-a63d-a24464d728ad"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("51d27cac-879a-41e0-bcb4-286a28744cb1"),
                            RoleId = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("fc1103f6-1362-4ac2-b899-8f2c7e2354ed"),
                            RoleId = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("862ba756-eea0-44dd-ba80-670d470f8329"),
                            RoleId = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            UserId = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9")
                        },
                        new
                        {
                            Id = new Guid("29dac5d4-6b10-487f-9ed2-243fa469e412"),
                            RoleId = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            UserId = new Guid("ee4295be-fe35-4626-8f30-ae2f1ddb6c9d")
                        },
                        new
                        {
                            Id = new Guid("790fe5ec-ca98-4c45-b0db-5272c1859bcd"),
                            RoleId = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            UserId = new Guid("d0b164f9-7319-4434-ba68-b7d21e83b9af")
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubjectEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc81ad4a-7eca-486b-856b-77248dfb2c3b"),
                            SubjectId = new Guid("4a28f2c0-b1f5-458b-9b0b-c9a953e67e4d"),
                            UserId = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9")
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.CourseEntity", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.TypeEntity", "Type")
                        .WithMany("Subjects")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserPermissionEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.CourseEntity", "Course")
                        .WithMany("UserPermissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.TypeEntity", "Type")
                        .WithMany("UserPermissions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserRolesEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.RolesEntity", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserSubjectEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.SubjectEntity", "Subject")
                        .WithMany("UserSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.RolesEntity", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.Navigation("UserSubjects");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.TypeEntity", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("UserRoles");

                    b.Navigation("UserSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
