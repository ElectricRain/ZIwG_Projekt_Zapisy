// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_ZIwG.Infrastructure.Repositories.EFRepository.Context;

namespace Project_ZIwG.Infrastructure.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CourseEntities");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.RolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RolesEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdf5aa4b-8b2f-4a45-a63d-a24464d728ad"),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            RoleName = "Lecturer"
                        },
                        new
                        {
                            Id = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            RoleName = "Creator"
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndHour")
                        .HasColumnType("TEXT");

                    b.Property<int>("Parity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartHour")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TypeId");

                    b.ToTable("SubjectEntities");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.TypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TypeEntities");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e"),
                            EmailAddress = "Admin@pwr.edu.pl",
                            Name = "admin",
                            Password = "admin",
                            Surname = "admin"
                        },
                        new
                        {
                            Id = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9"),
                            EmailAddress = "user@pwr.edu.pl",
                            Name = "user",
                            Password = "user",
                            Surname = "user"
                        },
                        new
                        {
                            Id = new Guid("d0b164f9-7319-4434-ba68-b7d21e83b9af"),
                            EmailAddress = "creator@pwr.edu.pl",
                            Name = "creator",
                            Password = "creator",
                            Surname = "creator"
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserPermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissionEntities");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserRolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRolesEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550cbff0-4353-45ce-863b-4c96d70b3f3b"),
                            RoleId = new Guid("bdf5aa4b-8b2f-4a45-a63d-a24464d728ad"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("43586ccd-1ee5-4c61-85ec-ff19b228f506"),
                            RoleId = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("2097bcc1-6aa8-487d-ad55-c7ac9182b314"),
                            RoleId = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            UserId = new Guid("201556a2-f780-4ea3-bd79-cf5cdd676e9e")
                        },
                        new
                        {
                            Id = new Guid("f2d3458a-f9ce-4c89-8fa9-5665f3f58f0c"),
                            RoleId = new Guid("6a3b2126-672d-4138-91b5-cb41016233f2"),
                            UserId = new Guid("d8d964ba-872b-4a41-8552-25c7ec8203f9")
                        },
                        new
                        {
                            Id = new Guid("a0dca8e5-b6c7-417a-859c-71e544bf5497"),
                            RoleId = new Guid("4dfdfdd6-cb54-4be2-8842-7c80271fc907"),
                            UserId = new Guid("d0b164f9-7319-4434-ba68-b7d21e83b9af")
                        });
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubjectEntities");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.CourseEntity", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.TypeEntity", "Type")
                        .WithMany("Subjects")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserPermissionEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.CourseEntity", "Course")
                        .WithMany("UserPermissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.TypeEntity", "Type")
                        .WithMany("UserPermissions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserRolesEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.RolesEntity", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserSubjectEntity", b =>
                {
                    b.HasOne("Project_ZIwG.Infrastructure.Entities.SubjectEntity", "Subject")
                        .WithMany("UserSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_ZIwG.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("UserSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.RolesEntity", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.SubjectEntity", b =>
                {
                    b.Navigation("UserSubjects");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.TypeEntity", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Project_ZIwG.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("UserRoles");

                    b.Navigation("UserSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
